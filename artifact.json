{
  "metadata": {
    "name": "@itentialopensource/pre-built-wizard",
    "version": "0.0.2",
    "description": "This contains modular workflows that operate when integrated with the app-artifacts application that can be installed within IAP. Once installed teams will be able to quickly automate common manual tasks such as creating a Pre-Built artifact.json file made up of IAP components, saving a significant amount of time and effort. This library can be used as modular components with other libraries and automations to build comprehensive end-to-end orchestrated workflows with Itential's low-code platform.",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-json_forms": "",
      "@itential/app-workflow_engine": ""
    }
  },
  "manifest": {
    "bundleName": "@itentialopensource/pre-built-wizard",
    "fingerprint": "67aa4728678a0513f46b856d",
    "createdEpoch": "1739212584445",
    "artifacts": [
      {
        "id": "Pre-Built Wizard Re-Discovery",
        "name": "Pre-Built Wizard Re-Discovery",
        "type": "automation",
        "location": "/bundles/automations/Pre-Built Wizard Re-Discovery.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Pre-Built Wizard",
        "name": "Pre-Built Wizard",
        "type": "automation",
        "location": "/bundles/automations/Pre-Built Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Pre-Built Wizard",
        "name": "Pre-Built Wizard",
        "type": "workflow",
        "location": "/bundles/workflows/Pre-Built Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Pre-Built Wizard Re-Discover",
        "name": "Pre-Built Wizard Re-Discover",
        "type": "workflow",
        "location": "/bundles/workflows/Pre-Built Wizard Re-Discover.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Review Re-Discovered Components",
        "name": "Review Re-Discovered Components",
        "type": "json-forms",
        "location": "/bundles/json_forms/Review Re-Discovered Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Pre-Built - Edit Discovered Components",
        "name": "Create Pre-Built - Edit Discovered Components",
        "type": "json-forms",
        "location": "/bundles/json_forms/Create Pre-Built - Edit Discovered Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Pre-Built Wizard Re-Discover",
        "name": "Pre-Built Wizard Re-Discover",
        "type": "json-forms",
        "location": "/bundles/json_forms/Pre-Built Wizard Re-Discover.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Create Pre-Built Form",
        "name": "Create Pre-Built Form",
        "type": "json-forms",
        "location": "/bundles/json_forms/Create Pre-Built Form.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "663cd90631b5e09e96d70e01",
        "name": "Filter Project Scoped Workflows - IAP",
        "type": "transformation",
        "location": "/bundles/transformations/Filter Project Scoped Workflows - IAP.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61a8f96c972d5600e3de8552",
        "name": "Create Pre-Built - Get formData",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Get formData.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6197e2fcda174d24c34d36dc",
        "name": "Create Pre-Built - Format Publish",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Format Publish.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "type": "transformation",
        "location": "/bundles/transformations/convertArtifactInfoToForm.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61aa46e4972d5600e3de8554",
        "name": "Create Pre-Built - Merge Discovered Components",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Merge Discovered Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "61aa625a972d5600e3de8555",
        "name": "Create Pre-Built - Determine Components",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Determine Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "619d03ad69bd2d6d0005f64d",
        "name": "Create Pre-Puilt - Edit Components",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Puilt - Edit Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6239fdc572a2f101008f5cf1",
        "name": "Create Pre-Built - Convert Form Data to Discover Inputs",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Convert Form Data to Discover Inputs.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "64b6c7f0af50070141c7da21",
        "name": "Create Pre-Built - Create Artifact to Publish",
        "type": "transformation",
        "location": "/bundles/transformations/Create Pre-Built - Create Artifact to Publish.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "type": "transformation",
        "location": "/bundles/transformations/mergeFormWithDiscovery.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "type": "transformation",
        "location": "/bundles/transformations/translateSchemaPushBundles.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "automation",
      "data": {
        "_id": "6279703c621a3a6ecb5e1b8f",
        "name": "Pre-Built Wizard Re-Discovery",
        "description": "Automation to update Pre-Built in Admin Essentials if new components have been added.",
        "componentName": "Pre-Built Wizard Re-Discover",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2023-07-18T19:17:16.991Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2025-01-27T17:56:19.335Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "triggers": [
          {
            "_id": "6797c8c45906e80af90fbd6c",
            "created": "2023-07-18T19:17:17.129Z",
            "createdBy": "admin@pronghorn",
            "lastUpdated": "2025-01-27T17:56:20.081Z",
            "lastUpdatedBy": "david.haywood@itential.com",
            "name": "Start Pre-Built Wizard Re-Discovery with Form",
            "type": "manual",
            "enabled": true,
            "actionType": "automations",
            "actionId": "6279703c621a3a6ecb5e1b8f",
            "formId": "Pre-Built Wizard Re-Discover",
            "formData": null,
            "description": "",
            "formSchemaHash": "3ee50746059b17b5f7cee5379b453484c71fcbdf0e4a0e8cb82667aed58071ba",
            "legacyWrapper": true,
            "migrationVersion": 3
          }
        ]
      }
    },
    {
      "type": "automation",
      "data": {
        "_id": "62797044621a3a6ecb5e1b91",
        "name": "Pre-Built Wizard",
        "description": "",
        "componentName": "Pre-Built Wizard",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2023-07-18T19:17:16.991Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2025-01-27T17:56:19.335Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "triggers": [
          {
            "_id": "6797c8c45906e80af90fbd6b",
            "created": "2023-07-18T19:17:17.126Z",
            "createdBy": "admin@pronghorn",
            "lastUpdated": "2025-01-27T18:06:28.942Z",
            "lastUpdatedBy": "david.haywood@itential.com",
            "name": "Start Pre-Built Wizard with Form",
            "type": "manual",
            "enabled": true,
            "actionType": "automations",
            "actionId": "62797044621a3a6ecb5e1b91",
            "formId": "Create Pre-Built Form",
            "formData": {
              "readme": "# Pre-Built Name\n\n## Table of Contents\n\n- [Pre-Built Name](#pre-built-name)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n    - [Capabilities](#capabilities)\n    - [Prerequisites](#prerequisites)\n    - [How to Install](#how-to-install)\n    - [Testing](#testing)\n      - [Adapters](#adapters)\n      - [External Systems](#external-systems)\n  - [Using this Pre-Built](#using-this-pre-built)\n    - [Entry Point IAP Component](#entry-point-iap-component)\n    - [Inputs](#inputs)\n    - [Outputs](#outputs)\n  - [Additional Information](#additional-information)\n\n## Overview\n\nA high level overview of what the Pre-Built does.\n\n### Capabilities\n\nA list of capabilities of what the Pre-Built. For example:\n\n- Onboard a device to controller\n- Perform a software upgrade\n\n### Prerequisites\n\nUsers must satisfy the following prerequisites to install and run this Pre-Built:\n\n- Itential Automation Platform\n  - `2023.2.x`\n\n### How to Install\n\nTo install this Pre-Built:\n\n- Verify that you are running the documented [prerequisites](#prerequisites) in order to install the Pre-Built.\n\n- Follow the instructions on the Itential Documentation site for [importing a Pre-Built](https://docs.itential.com/docs/importing-a-prebuilt-cloud).\n\n### Testing\n\nAny information related to what testing has been done to ensure this Pre-Built runs as expected.\n\n### Adapters\n\nAny adapters that need to be installed on IAP to run the Pre-Built. Ideally would also include the adapter version here.\n\n### External Systems\n\nAny external systems needed to run the Pre-Built. Ideally would also include the external system API and/or OS version here.\n\n## Using this Pre-Built\n\nAny information for how to use this Pre-Built. For instance, if meant to be run in a childJob task of a larger use case, can state this Pre-Built can be run in a [childJob task](https://docs.itential.com/docs/childjob-task-iap-2023-2).\n\nIf the Pre-Built is intended to be run from a northbound system using an API call or to be scheduled to run or manully run whenever needed, can state this Pre-Built can be run by the corresponding [Operations Manager automation trigger](https://docs.itential.com/docs/triggers-ops-manager-iap).\n\n### Entry Point IAP Component\n\nThe name of the IAP component used to start the Pre-Built. This could be a workflow, an Operations Manager automation, a Transformation (JST), or some other IAP component.\n\n### Inputs\n\nAny information about the inputs to this Pre-Built.\n\n### Outputs\n\nAny information about the outputs to this Pre-Built.\n\n### Additional Information\n\nAny additional information related to the Pre-Built.\n",
              "zeroTouch": true,
              "operationsManagerAutomations": [
                {
                  "name": "AWS STS Data Collector Simplified"
                }
              ],
              "scope": "@local",
              "preBuiltName": "1",
              "preBuiltDescription": "1",
              "contributor": "1"
            },
            "description": "",
            "formSchemaHash": "0cc8ce04ad815975fd06ed33c2dc704213f16dd147c7a2c722152c33e6910f5e",
            "legacyWrapper": true,
            "migrationVersion": 3
          }
        ]
      }
    },
    {
      "type": "workflow",
      "data": {
        "created": "2023-07-18T19:51:26.146Z",
        "createdVersion": "5.46.0-2023.1.14.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": true
        },
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "formData"
          ]
        },
        "lastUpdatedVersion": "4.69.3-2023.2.172",
        "last_updated": "2025-01-27T17:56:18.116Z",
        "last_updated_by": {
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com",
          "firstname": "David",
          "inactive": false
        },
        "name": "Pre-Built Wizard",
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "preAutomationTime": 0,
        "sla": 0,
        "tasks": {
          "1667": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if No Invalid Components Found",
            "description": "Confirm no invalid components found",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "ef7"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        },
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 0.8500749625187406,
            "y": 0.5127582017010935,
            "nodeLocation": {
              "x": 6156,
              "y": 1008
            }
          },
          "2424": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Invalid Components",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Invalid Components Discovered",
                "message": "Invalid components were discovered during the discovery phase. The invalid components are shown below.",
                "body": "$var.ef7.return_data",
                "variables": "",
                "btn_success": "Re-Attempt Discovery",
                "btn_failure": "End Automation"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "x": 0.8470764617691154,
            "y": 0.701093560145808,
            "scheduled": false,
            "nodeLocation": {
              "x": 6156,
              "y": 1140
            }
          },
          "9514": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Merge Discovered Components",
            "description": "Merge discovered components to create a new object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61aa46e4972d5600e3de8554",
                "variableMap": {
                  "workflow": "$var.5f85.automationWorkflows",
                  "operationsAutomation": "$var.5f85.operationsManagerOperations"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "discoveryData": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.2811094452773613,
            "y": 0.5018226002430134,
            "task_name": "Create Pre-Built - Merge Discovered Components",
            "retrySettings": null,
            "nodeLocation": {
              "x": 4860,
              "y": 1008
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5,
            "nodeLocation": {
              "x": 4308,
              "y": 1008
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.5742128935532236,
            "y": 0.48602673147023084,
            "nodeLocation": {
              "x": 9336,
              "y": 1008
            }
          },
          "5f85": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Get formData",
            "description": "Takes in the formData for the 'Create a new prebuilt master' workflow and returns the parsed variables.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61a8f96c972d5600e3de8552",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "scope": null,
                "prebuiltName": null,
                "prebuiltDescription": null,
                "readme": null,
                "zeroTouch": null,
                "license": null,
                "contributor": null,
                "keywords": null,
                "operationsManagerOperations": null,
                "automationWorkflows": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.12218890554722639,
            "y": 0.5054678007290401,
            "task_name": "Create Pre-Built - Get formData",
            "retrySettings": null,
            "nodeLocation": {
              "x": 4548,
              "y": 1008
            }
          },
          "99d0": {
            "name": "componentDiscovery",
            "canvasName": "componentDiscovery",
            "summary": "Discover Linked Components",
            "description": "Discovers any components linked to Operations Manager operations or workflows provided",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "entryPoint": "$var.9514.discoveryData"
              },
              "outgoing": {
                "discovery": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.46927726683227117,
            "y": 0.5054678007290401,
            "scheduled": false,
            "nodeLocation": {
              "x": 5184,
              "y": 1008
            }
          },
          "a76c": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Show Component Discovery Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Encountered",
                "message": "An error was thrown while discovering the different components of the automation. The error is shown below.",
                "body": "$var.99d0.error",
                "variables": "",
                "btn_success": "Re-Attempt Discovery",
                "btn_failure": "End Automation"
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "x": 0.4700149925037481,
            "y": 0.6986634264884569,
            "scheduled": false,
            "nodeLocation": {
              "x": 5184,
              "y": 1152
            }
          },
          "b9b0": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6619190404797601,
            "y": 0.9732685297691372,
            "scheduled": false,
            "nodeLocation": {
              "x": 5184,
              "y": 1284
            }
          },
          "ef7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Invalid Discovered Components",
            "description": "Query invalid discovered components",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "invalidComponents",
                "obj": "$var.99d0.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "x": 0.5877061469265368,
            "y": 0.5091130012150669,
            "scheduled": false,
            "nodeLocation": {
              "x": 5508,
              "y": 1008
            }
          },
          "84d1": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Get number of invalid components",
            "description": "Get number of invalid components",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.ef7.return_data"
              },
              "outgoing": {
                "length": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7143928035982009,
            "y": 0.5066828675577156,
            "scheduled": false,
            "nodeLocation": {
              "x": 5832,
              "y": 1008
            }
          },
          "d4ba": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Puilt - Edit Components",
            "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "619d03ad69bd2d6d0005f64d",
                "variableMap": {
                  "componentDiscoveryOutput": "$var.99d0.discovery"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "componentEditorFormInput": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 0.9775112443778111,
            "y": 0.5164034021871203,
            "task_name": "Create Pre-Puilt - Edit Components",
            "retrySettings": null,
            "nodeLocation": {
              "x": 6480,
              "y": 1008
            }
          },
          "615f": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Edit Discovered Components",
            "description": "Edit discovered components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Create Pre-Built - Edit Discovered Components",
                "instance_data": "$var.d4ba.componentEditorFormInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "groups": [],
            "x": 1.1131934032983508,
            "y": 0.3730255164034022,
            "scheduled": false,
            "nodeLocation": {
              "x": 6804,
              "y": 888
            }
          },
          "3f2": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Determine Components",
            "description": "Determine components to publish",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "61aa625a972d5600e3de8555",
                "variableMap": {
                  "formData": "$var.615f.export",
                  "originalComponents": "$var.d4ba.componentEditorFormInput"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "componentInput": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 1.2511244377811095,
            "y": 0.5176184690157959,
            "task_name": "Create Pre-Built - Determine Components",
            "retrySettings": null,
            "nodeLocation": {
              "x": 7128,
              "y": 1008
            }
          },
          "8d8": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Format Publish",
            "description": "Takes in the output of the AppArtifacts componentDiscovery task and some other data to form the input of the createPublishedArtifactFromScratch task.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6197e2fcda174d24c34d36dc",
                "variableMap": {
                  "name": "$var.5f85.prebuiltName",
                  "scope": "$var.5f85.scope",
                  "description": "$var.5f85.prebuiltDescription",
                  "contributor": "$var.5f85.contributor",
                  "readme": "$var.5f85.readme",
                  "license": "$var.5f85.license",
                  "categories": [],
                  "keywords": "$var.5f85.keywords",
                  "discoverComponentsOutput": "$var.99d0.discovery",
                  "componentsFormSelection": "$var.3f2.componentInput"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": false
                }
              },
              "outgoing": {
                "artifactData": null,
                "modules": null,
                "defaultPackageJson": null
              },
              "decorators": []
            },
            "groups": [],
            "x": 1.421487603305785,
            "y": 0.5191122071516646,
            "task_name": "Create Pre-Built - Format Publish",
            "retrySettings": null,
            "nodeLocation": {
              "x": 7452,
              "y": 1008
            }
          },
          "e98f": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Create List of Files to Create and Update for Pre-built",
            "description": "Creates list of files to create and update for Pre-Built",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.8d8.artifactData",
                "modules": "$var.8d8.modules",
                "packageJson": "$var.8d8.defaultPackageJson"
              },
              "outgoing": {
                "callback": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.5892053973013494,
            "y": 0.5103280680437424,
            "scheduled": false,
            "nodeLocation": {
              "x": 7776,
              "y": 1008
            }
          },
          "23fc": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Create Pre-Built Error",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Creating Pre-Built Files",
                "message": "An error was thrown while creating the files to create and update for this Pre-Built. Select 'End Automation' to end the job. The error is shown below.",
                "body": "$var.e98f.error",
                "variables": "",
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "x": 1.5877061469265368,
            "y": 0.7132442284325637,
            "scheduled": false,
            "nodeLocation": {
              "x": 7776,
              "y": 1140
            }
          },
          "cbd9": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.699400299850075,
            "y": 0.959902794653706,
            "scheduled": false,
            "nodeLocation": {
              "x": 7776,
              "y": 1284
            }
          },
          "608e": {
            "name": "addArtifactToAdminEssentials",
            "canvasName": "addArtifactToAdminEssentials",
            "summary": "Add an Artifact to AE via Direct Mongo Injection",
            "description": "Adds an artifact created from a published artifact to admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.e98f.callback"
              },
              "outgoing": {
                "AEArtifactID": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.8088455772113943,
            "y": 0.5018226002430134,
            "scheduled": false,
            "nodeLocation": {
              "x": 8100,
              "y": 1008
            }
          },
          "f8df": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Error Adding Pre-Built to Admin Essentials",
            "description": "Show provision error and decision options",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error Adding Pre-Built to Admin Essentials",
                "message": "An error was thrown while adding the Pre-Built to Admin Essentials. Press 'End Automation' to end the job. The error is shown below.",
                "body": "$var.608e.error",
                "variables": "",
                "btn_success": "End Automation",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "x": 1.8103448275862069,
            "y": 0.715674362089915,
            "scheduled": false,
            "nodeLocation": {
              "x": 8100,
              "y": 1140
            }
          },
          "205d": {
            "name": "stub",
            "canvasName": "stub",
            "summary": "Failure Path",
            "description": "Failure Path",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "type": "success",
                "delay": "",
                "response": ""
              },
              "outgoing": {
                "response": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.5772113943028487,
            "y": 0.9562575941676792,
            "scheduled": false,
            "nodeLocation": {
              "x": 9336,
              "y": 1284
            }
          },
          "15d2": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Create Object with Artifact ID",
            "description": "Create object with artifact ID",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {},
                "path": [
                  "id"
                ],
                "value": "$var.608e.AEArtifactID"
              },
              "outgoing": {
                "object": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.9880059970014992,
            "y": 0.503037667071689,
            "scheduled": false,
            "nodeLocation": {
              "x": 8424,
              "y": 1008
            }
          },
          "effd": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Create URL Path of Pre-built in Admin Essentials",
            "description": "Create URL path of Pre-built in Admin Essentials",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "/prebuilts/<!id!>/export",
                "outputType": "string",
                "variables": "$var.15d2.object"
              },
              "outgoing": {
                "output": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.1716641679160418,
            "y": 0.4933171324422843,
            "scheduled": false,
            "nodeLocation": {
              "x": 8748,
              "y": 1008
            }
          },
          "2fa0": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Zero Touch Mode",
            "description": "Check if Zero Touch Mode",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "zeroTouch",
                          "task": "5f85"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        },
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 1.1041979010494753,
            "y": 0.5103280680437424,
            "nodeLocation": {
              "x": 6804,
              "y": 1008
            }
          },
          "f087": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Check if Zero Touch Mode",
            "description": "Check if Zero Touch Mode",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "zeroTouch",
                          "task": "5f85"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        },
                        "rightQuery": ""
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "groups": [],
            "x": 2.3013493253373314,
            "y": 0.4823815309842041,
            "nodeLocation": {
              "x": 9072,
              "y": 1008
            }
          },
          "3ced": {
            "name": "downloadArtifact",
            "canvasName": "downloadArtifact",
            "summary": "Show Dialog to Download Pre-Built",
            "description": "Show dialog to download Pre-Built",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "artifactLink": "$var.effd.output",
                "gitLink": ""
              },
              "outgoing": {},
              "error": "",
              "decorators": []
            },
            "view": "/app_artifacts/views/tasks/downloadArtifact",
            "groups": [],
            "x": 2.4340329835082457,
            "y": 0.34143377885783716,
            "scheduled": false,
            "nodeLocation": {
              "x": 9072,
              "y": 888
            }
          }
        },
        "transitions": {
          "1667": {
            "2424": {
              "type": "standard",
              "state": "failure"
            },
            "d4ba": {
              "type": "standard",
              "state": "success"
            }
          },
          "2424": {
            "99d0": {
              "type": "revert",
              "state": "success"
            },
            "b9b0": {
              "type": "standard",
              "state": "failure"
            }
          },
          "9514": {
            "99d0": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "5f85": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "5f85": {
            "9514": {
              "type": "standard",
              "state": "success"
            }
          },
          "99d0": {
            "a76c": {
              "type": "standard",
              "state": "error"
            },
            "ef7": {
              "type": "standard",
              "state": "success"
            }
          },
          "a76c": {
            "99d0": {
              "type": "revert",
              "state": "success"
            },
            "b9b0": {
              "type": "standard",
              "state": "failure"
            }
          },
          "b9b0": {
            "cbd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "ef7": {
            "84d1": {
              "type": "standard",
              "state": "success"
            }
          },
          "84d1": {
            "1667": {
              "type": "standard",
              "state": "success"
            }
          },
          "d4ba": {
            "2fa0": {
              "type": "standard",
              "state": "success"
            }
          },
          "615f": {
            "3f2": {
              "type": "standard",
              "state": "success"
            }
          },
          "3f2": {
            "8d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "8d8": {
            "e98f": {
              "type": "standard",
              "state": "success"
            }
          },
          "e98f": {
            "23fc": {
              "type": "standard",
              "state": "error"
            },
            "608e": {
              "type": "standard",
              "state": "success"
            }
          },
          "23fc": {
            "cbd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "cbd9": {
            "205d": {
              "type": "standard",
              "state": "success"
            }
          },
          "608e": {
            "f8df": {
              "type": "standard",
              "state": "error"
            },
            "15d2": {
              "type": "standard",
              "state": "success"
            }
          },
          "f8df": {
            "cbd9": {
              "type": "standard",
              "state": "success"
            }
          },
          "205d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "15d2": {
            "effd": {
              "type": "standard",
              "state": "success"
            }
          },
          "effd": {
            "f087": {
              "type": "standard",
              "state": "success"
            }
          },
          "2fa0": {
            "3f2": {
              "type": "standard",
              "state": "success"
            },
            "615f": {
              "type": "standard",
              "state": "failure"
            }
          },
          "f087": {
            "3ced": {
              "type": "standard",
              "state": "failure"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3ced": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 4
      }
    },
    {
      "type": "workflow",
      "data": {
        "created": "2022-03-21T19:44:38.709Z",
        "createdVersion": "5.40.5-2021.1.69.0",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": true
        },
        "description": null,
        "font_size": 12,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "title": "variables",
              "type": "object",
              "properties": {}
            }
          },
          "required": [
            "formData"
          ]
        },
        "lastUpdatedVersion": "4.69.3-2023.2.172",
        "last_updated": "2025-01-27T17:56:18.120Z",
        "last_updated_by": {
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com",
          "firstname": "David",
          "inactive": false
        },
        "name": "Pre-Built Wizard Re-Discover",
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "title": "variables",
              "type": "object",
              "properties": {}
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tasks": {
          "5709": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "modules",
                "value": [
                  {
                    "package_id": "@itential/app-ag_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-admin_essentials",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_services",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-form_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-artifacts",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-automation_studio",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-json_forms",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-configuration_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_config",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-local_aaa",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-mop",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-nso_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-policy_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_management",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/search",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-smart_template",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-task_worker",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-template_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/tags",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-mongo",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-redis",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_engine",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_builder",
                    "version": ""
                  }
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "groups": [],
            "nodeLocation": {
              "x": 2904,
              "y": 1116
            }
          },
          "5979": {
            "name": "componentDiscovery",
            "canvasName": "componentDiscovery",
            "summary": "Performs discovery on Automation Catalogs or Workflows",
            "description": "Discovers any referenced components within automation catalogs",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "entryPoint": "$var.b668.discoveryEntryPoint"
              },
              "outgoing": {
                "discovery": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 1284,
              "y": 1116
            }
          },
          "7393": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Merge form output with discovered components",
            "description": "Merge form output with discovered components",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b86f821c795008dc26118",
                "variableMap": {
                  "formOutput": "$var.6c56.export",
                  "discoveryOutput": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "formInput": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "mergeFormWithDiscoveryGitHub",
            "retrySettings": null,
            "nodeLocation": {
              "x": 1608,
              "y": 1116
            }
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "nodeLocation": {
              "x": -1248,
              "y": 1116
            }
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "nodeLocation": {
              "x": 3804,
              "y": 1116
            }
          },
          "5dec": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather Selected Artifact Info",
            "description": "Gather Selected Artifact Info",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "$var.9cfa.output"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -672,
              "y": 1116
            }
          },
          "76d1": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "convertArtifactInfoToForm",
            "description": "Convert artifact data into format for JSON Form.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6210015da161ae00ef6164b4",
                "variableMap": {
                  "input": "$var.d5d.return_data"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "convertArtifactInfoToFormGithub",
            "retrySettings": null,
            "nodeLocation": {
              "x": -12,
              "y": 1116
            }
          },
          "b668": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "convertFormOutputToDiscoveryFormat",
            "description": "Converts form output to format for discovery",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6239fdc572a2f101008f5cf1",
                "variableMap": {
                  "formOutput": "$var.6c56.export"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "discoveryEntryPoint": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Create Pre-Built - Convert Form Data to Discover Inputs",
            "retrySettings": null,
            "nodeLocation": {
              "x": 960,
              "y": 1116
            }
          },
          "bd16": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Confirm",
            "description": "Confirm",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Confirm Artifact Update",
                "message": "Please confirm correctness of the up to date list of components presented by the previous task.",
                "body": "Confirm button will update the list of components inside the Admin Essentials application.<br>Retry will revert to the previous task, so you can pick and choose what documents you may want to omit before discovery.",
                "variables": {},
                "btn_success": "CONFIRM",
                "btn_failure": "RETRY"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 2256,
              "y": 1116
            }
          },
          "2b81": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Failed Discovery",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed Discovery",
                "message": "Some selected component(s) caused the discovery to fail.<br>Please try again",
                "body": "",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1284,
              "y": 1236
            }
          },
          "8ed7": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.eb15.mata",
                "modules": "$var.job.modules",
                "packageJson": "$var.eb15.packageJSON"
              },
              "outgoing": {
                "callback": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 3228,
              "y": 1116
            }
          },
          "eb15": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Create Artifact to Publish",
            "description": "Create Artifact for publish",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "64b6c7f0af50070141c7da21",
                "variableMap": {
                  "AEartifactInfo": "$var.d5d.return_data",
                  "formOutput": "$var.a078.export",
                  "discovery": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "mata": null,
                "packageJSON": null
              },
              "decorators": []
            },
            "groups": [],
            "task_name": "Create Pre-Built - Create Artifact to Publish",
            "retrySettings": null,
            "nodeLocation": {
              "x": 2580,
              "y": 1116
            }
          },
          "cd71": {
            "name": "replaceArtifactAdminEssentials",
            "canvasName": "replaceArtifactAdminEssentials",
            "summary": "Replaces an artifact in AE via direct mongo injection",
            "description": "Replaces an artifact created from a published artifact in admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.8ed7.callback"
              },
              "outgoing": {
                "modifiedCount": null
              },
              "error": ""
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": 3552,
              "y": 1116
            }
          },
          "6c56": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show Current Components",
            "description": "Show Current Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Review Re-Discovered Components",
                "instance_data": "$var.f80d.componentEditorFormInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 636,
              "y": 1116
            }
          },
          "a078": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show New Components",
            "description": "Show New Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Review Re-Discovered Components",
                "instance_data": "$var.7393.formInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": 1932,
              "y": 1116
            }
          },
          "f80d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "Create Pre-Built - Map Components for Form",
            "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "621002baa161ae00ef6164b5",
                "variableMap": {
                  "componentDiscoveryOutput": "$var.76d1.output"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "componentEditorFormInput": null
              }
            },
            "groups": [],
            "task_name": "Create Pre-Built - Map Components for Form",
            "retrySettings": null,
            "nodeLocation": {
              "x": 312,
              "y": 1116
            }
          },
          "9cfa": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Create endpoint",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "/prebuilts?&skip=0&order=1&sort=name&contains=<!prebuilt!>&containsField=name",
                "outputType": "string",
                "variables": "$var.job.formData"
              },
              "outgoing": {
                "output": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "actor": "Pronghorn",
            "scheduled": false,
            "nodeLocation": {
              "x": -996,
              "y": 1116
            }
          },
          "d5d": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query artifact data",
            "description": "Query artifact data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "results[0]",
                "obj": "$var.5dec.responseBody"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "groups": [],
            "scheduled": false,
            "nodeLocation": {
              "x": -336,
              "y": 1116
            }
          }
        },
        "transitions": {
          "5709": {
            "8ed7": {
              "type": "standard",
              "state": "success"
            }
          },
          "5979": {
            "7393": {
              "type": "standard",
              "state": "success"
            },
            "2b81": {
              "type": "standard",
              "state": "error"
            }
          },
          "6355": {},
          "7393": {
            "a078": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "9cfa": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "5dec": {
            "d5d": {
              "type": "standard",
              "state": "success"
            }
          },
          "76d1": {
            "f80d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b668": {
            "5979": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd16": {
            "5dec": {
              "type": "revert",
              "state": "failure"
            },
            "eb15": {
              "type": "standard",
              "state": "success"
            }
          },
          "2b81": {
            "5dec": {
              "type": "revert",
              "state": "success"
            }
          },
          "8ed7": {
            "cd71": {
              "type": "standard",
              "state": "success"
            }
          },
          "eb15": {
            "5709": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd71": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6c56": {
            "b668": {
              "type": "standard",
              "state": "success"
            }
          },
          "a078": {
            "bd16": {
              "type": "standard",
              "state": "success"
            }
          },
          "f80d": {
            "6c56": {
              "type": "standard",
              "state": "success"
            }
          },
          "9cfa": {
            "5dec": {
              "type": "standard",
              "state": "success"
            }
          },
          "d5d": {
            "76d1": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "type": "automation",
        "preAutomationTime": 0,
        "sla": 0,
        "canvasVersion": 3,
        "tags": [],
        "groups": [],
        "migrationVersion": 4
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "6516f1aadadc5e7359924458",
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "operationsAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "created": "2022-02-17T21:51:07.149Z",
        "createdBy": "david.haywood@itential.com",
        "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
        "lastUpdated": "2025-01-27T17:56:19.272Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "name": "Review Re-Discovered Components",
        "schema": {
          "title": "Review Re-Discovered Components",
          "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "operationsAutomations": {
                  "type": "array",
                  "title": "Operations Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/operationsAutomations/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/workflows/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "_id": "/properties/components/properties/transformations/items/properties/id",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/transformations/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/jsonForms/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/forms/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/templates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/commandTemplates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/analyticTemplates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "treeId"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/goldenConfigTrees/items/properties/name",
                        "description": ""
                      },
                      "treeId": {
                        "type": "string",
                        "title": "treeId",
                        "_id": "/properties/components/properties/goldenConfigTrees/items/properties/treeId",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "61748fab-3597-403e-987d-a9ff85462054",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "23b16e1f-2fe0-442d-ac68-7b1d8dba933a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Operations Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    },
                    {
                      "nodeId": "c96bde0a-7d74-4914-9958-af132fb945c7",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "eb4401d0-da0a-4973-a44b-8efce075581a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    },
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "treeId",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "uiSchema": {
          "components": {
            "ui:collapseByDefault": false,
            "operationsAutomations": {
              "items": {
                "name": {
                  "ui:placeholder": "Enter text"
                }
              }
            },
            "workflows": {
              "items": {}
            },
            "transformations": {
              "items": {
                "id": {
                  "ui:widget": "textarea"
                },
                "name": {
                  "ui:placeholder": "Enter text"
                }
              }
            },
            "jsonForms": {
              "items": {
                "name": {
                  "ui:widget": "textarea"
                }
              }
            },
            "forms": {
              "items": {}
            },
            "templates": {
              "items": {}
            },
            "commandTemplates": {
              "items": {}
            },
            "analyticTemplates": {
              "items": {}
            },
            "goldenConfigTrees": {
              "items": {
                "name": {
                  "ui:placeholder": "Enter text"
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "operationsAutomations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "619c13997bb90824c2ac0dc1",
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "operationsAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "created": "2021-11-22T22:03:05.532Z",
        "createdBy": "david.haywood@itential.com",
        "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
        "lastUpdated": "2025-01-27T17:56:19.312Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "name": "Create Pre-Built - Edit Discovered Components",
        "schema": {
          "title": "Create Pre-Built - Edit Discovered Components",
          "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "operationsAutomations": {
                  "type": "array",
                  "title": "Operations Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/operationsAutomations/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/workflows/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "_id": "/properties/components/properties/transformations/items/properties/id",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/transformations/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/jsonForms/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/forms/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/templates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/commandTemplates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/analyticTemplates/items/properties/name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "treeId"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "_id": "/properties/components/properties/goldenConfigTrees/items/properties/name",
                        "description": ""
                      },
                      "treeId": {
                        "type": "string",
                        "title": "treeId",
                        "_id": "/properties/components/properties/goldenConfigTrees/items/properties/treeId",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "61748fab-3597-403e-987d-a9ff85462054",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "23b16e1f-2fe0-442d-ac68-7b1d8dba933a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Operations Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    },
                    {
                      "nodeId": "c96bde0a-7d74-4914-9958-af132fb945c7",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": false,
                      "disabled": true,
                      "readonly": false,
                      "readOnly": true
                    },
                    {
                      "nodeId": "c22ad0ea-8616-4c82-8463-5ec5f8ee6e2e",
                      "type": "string",
                      "title": "treeId",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "uiSchema": {
          "components": {
            "ui:collapseByDefault": false,
            "operationsAutomations": {
              "items": {
                "name": {
                  "ui:placeholder": "Enter text"
                }
              }
            },
            "workflows": {
              "items": {}
            },
            "transformations": {
              "items": {
                "id": {
                  "ui:widget": "textarea"
                },
                "name": {
                  "ui:placeholder": "Enter text"
                }
              }
            },
            "jsonForms": {
              "items": {
                "name": {
                  "ui:widget": "textarea"
                }
              }
            },
            "forms": {
              "items": {}
            },
            "templates": {
              "items": {}
            },
            "commandTemplates": {
              "items": {}
            },
            "analyticTemplates": {
              "items": {}
            },
            "goldenConfigTrees": {
              "items": {
                "name": {
                  "ui:readonly": true
                },
                "treeId": {
                  "ui:placeholder": "Enter text"
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "operationsAutomations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "6239d8f2982e0300f2339883",
        "bindingSchema": {
          "properties": {
            "prebuilt": {
              "binding:method": "GET",
              "binding:link": {
                "$ref": "/links",
                "rel": "collection"
              },
              "binding:target": {
                "propertyPointer": "/enum"
              },
              "binding:hyperSchema": {
                "type": "object",
                "base": "/prebuilts",
                "links": [
                  {
                    "rel": "collection",
                    "href": "/?limit=1000",
                    "targetMediaType": "application/json",
                    "targetSchema": {
                      "$ref": "#"
                    },
                    "variables": []
                  }
                ]
              },
              "binding:source": {
                "propertyPointer": "/results",
                "keyPointer": "/name"
              }
            }
          }
        },
        "created": "2022-03-22T14:10:58.722Z",
        "createdBy": "david.haywood@itential.com",
        "description": "",
        "lastUpdated": "2025-01-27T17:56:19.305Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "name": "Pre-Built Wizard Re-Discover",
        "schema": {
          "title": "Pre-Built Wizard Re-Discover",
          "description": "",
          "type": "object",
          "required": [
            "prebuilt"
          ],
          "properties": {
            "prebuilt": {
              "type": "string",
              "title": "Prebuilt",
              "_id": "/properties/prebuilt",
              "description": "",
              "enum": []
            }
          }
        },
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "bc710d34-6187-4933-8e44-e2c01bc96380",
              "type": "string",
              "title": "Prebuilt",
              "description": "",
              "placeholder": "Select an item",
              "required": true,
              "enum": [],
              "binding": true,
              "rel": "collection",
              "targetPointer": "/enum",
              "method": "GET",
              "base": "/prebuilts",
              "href": "/?limit=1000",
              "sourcePointer": "/results",
              "sourceKeyPointer": "/name",
              "originalHref": "/:id"
            }
          ]
        },
        "uiSchema": {
          "prebuilt": {
            "ui:placeholder": "Select an item"
          }
        },
        "validationSchema": {},
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "61a8f2e224eb8400d5a5c068",
        "bindingSchema": {
          "properties": {
            "keywords": {
              "items": {
                "properties": {}
              }
            },
            "operationsManagerAutomations": {
              "items": {
                "properties": {
                  "name": {
                    "binding:method": "GET",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/operations-manager",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "/automations?limit=999",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          },
                          "variables": []
                        }
                      ]
                    },
                    "binding:source": {
                      "propertyPointer": "/data",
                      "keyPointer": "/name"
                    }
                  }
                }
              }
            },
            "automationWorkflows": {
              "items": {
                "properties": {
                  "name": {
                    "binding:method": "GET",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/automation-studio",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "/workflows?limit=0&include=name",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          },
                          "variables": []
                        }
                      ]
                    },
                    "binding:source": {
                      "transformation": "663cd90631b5e09e96d70e01",
                      "transformationUrl": "/automation-studio/json-forms/runtransformation/663cd90631b5e09e96d70e01"
                    }
                  }
                }
              }
            }
          }
        },
        "created": "2021-12-02T16:22:58.716Z",
        "createdBy": "david.haywood@itential.com",
        "description": "",
        "lastUpdated": "2025-01-27T17:56:19.266Z",
        "lastUpdatedBy": "david.haywood@itential.com",
        "name": "Create Pre-Built Form",
        "schema": {
          "title": "Create Pre-Built Form",
          "description": "",
          "type": "object",
          "required": [
            "scope",
            "preBuiltName",
            "preBuiltDescription",
            "contributor",
            "readme"
          ],
          "properties": {
            "scope": {
              "type": "string",
              "title": "Scope",
              "_id": "/properties/scope",
              "description": "Add the scope of Pre-Built. For example, Itential open source projects have a scope of @itentialopensource",
              "pattern": "@[a-z0-9-~][a-z0-9-._~]*$"
            },
            "preBuiltName": {
              "type": "string",
              "title": "Pre-Built Name",
              "_id": "/properties/preBuiltName",
              "description": "",
              "minLength": 1
            },
            "preBuiltDescription": {
              "type": "string",
              "title": "Pre-Built Description",
              "_id": "/properties/preBuiltDescription",
              "description": ""
            },
            "license": {
              "type": "string",
              "title": "License",
              "_id": "/properties/license",
              "description": "(OPTIONAL) Provide a license:"
            },
            "contributor": {
              "type": "string",
              "title": "Contributor",
              "_id": "/properties/contributor",
              "description": ""
            },
            "readme": {
              "type": "string",
              "title": "Readme",
              "_id": "/properties/readme",
              "description": "This readme will be displayed on the Admin Essentials page. You can edit this placeholder to provide a description of what your prebuilt will accomplish.",
              "default": "# Pre-Built Name\n\n## Table of Contents\n\n- [Pre-Built Name](#pre-built-name)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n    - [Capabilities](#capabilities)\n    - [Prerequisites](#prerequisites)\n    - [How to Install](#how-to-install)\n    - [Testing](#testing)\n      - [Adapters](#adapters)\n      - [External Systems](#external-systems)\n  - [Using this Pre-Built](#using-this-pre-built)\n    - [Entry Point IAP Component](#entry-point-iap-component)\n    - [Inputs](#inputs)\n    - [Outputs](#outputs)\n  - [Additional Information](#additional-information)\n\n## Overview\n\nA high level overview of what the Pre-Built does.\n\n### Capabilities\n\nA list of capabilities of what the Pre-Built. For example:\n\n- Onboard a device to controller\n- Perform a software upgrade\n\n### Prerequisites\n\nUsers must satisfy the following prerequisites to install and run this Pre-Built:\n\n- Itential Automation Platform\n  - `2023.2.x`\n\n### How to Install\n\nTo install this Pre-Built:\n\n- Verify that you are running the documented [prerequisites](#prerequisites) in order to install the Pre-Built.\n\n- Follow the instructions on the Itential Documentation site for [importing a Pre-Built](https://docs.itential.com/docs/importing-a-prebuilt-cloud).\n\n### Testing\n\nAny information related to what testing has been done to ensure this Pre-Built runs as expected.\n\n### Adapters\n\nAny adapters that need to be installed on IAP to run the Pre-Built. Ideally would also include the adapter version here.\n\n### External Systems\n\nAny external systems needed to run the Pre-Built. Ideally would also include the external system API and/or OS version here.\n\n## Using this Pre-Built\n\nAny information for how to use this Pre-Built. For instance, if meant to be run in a childJob task of a larger use case, can state this Pre-Built can be run in a [childJob task](https://docs.itential.com/docs/childjob-task-iap-2023-2).\n\nIf the Pre-Built is intended to be run from a northbound system using an API call or to be scheduled to run or manully run whenever needed, can state this Pre-Built can be run by the corresponding [Operations Manager automation trigger](https://docs.itential.com/docs/triggers-ops-manager-iap).\n\n### Entry Point IAP Component\n\nThe name of the IAP component used to start the Pre-Built. This could be a workflow, an Operations Manager automation, a Transformation (JST), or some other IAP component.\n\n### Inputs\n\nAny information about the inputs to this Pre-Built.\n\n### Outputs\n\nAny information about the outputs to this Pre-Built.\n\n### Additional Information\n\nAny additional information related to the Pre-Built.\n"
            },
            "zeroTouch": {
              "type": "boolean",
              "title": "Zero Touch",
              "_id": "/properties/zeroTouch",
              "description": "",
              "default": true,
              "enum": [
                true,
                false
              ]
            },
            "keywords": {
              "type": "array",
              "title": "Keywords",
              "description": "Optionally enter any keywords to associate with this prebuilt",
              "items": {
                "type": "object",
                "required": [],
                "properties": {
                  "keyword": {
                    "type": "string",
                    "title": "Keyword",
                    "_id": "/properties/keywords/items/properties/keyword",
                    "description": ""
                  }
                }
              }
            },
            "operationsManagerAutomations": {
              "type": "array",
              "title": "Operations Manager Automations",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "_id": "/properties/operationsManagerAutomations/items/properties/name",
                    "description": "",
                    "enum": []
                  }
                }
              }
            },
            "automationWorkflows": {
              "type": "array",
              "title": "Automation Workflows",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "title": "Name",
                    "_id": "/properties/automationWorkflows/items/properties/name",
                    "description": "Workflow Automation Name",
                    "enum": []
                  }
                }
              }
            }
          }
        },
        "struct": {
          "type": "array",
          "items": [
            {
              "nodeId": "71695525-c187-4f87-9a8c-6a40cd18aa5e",
              "type": "string",
              "title": "Scope",
              "description": "Add the scope of Pre-Built. For example, Itential open source projects have a scope of @itentialopensource",
              "placeholder": "Enter scope of Pre-Built",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "pattern": "@[a-z0-9-~][a-z0-9-._~]*$",
              "helper": "Must be prepended with \"@\", for instance @pre-built"
            },
            {
              "nodeId": "0351d824-c65b-415c-8086-b9b7dae12c4e",
              "type": "string",
              "title": "Pre-Built Name",
              "description": "",
              "placeholder": "Enter Pre-Built name",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "pattern": "",
              "minLength": 1,
              "helper": "Enter Pre-Built name"
            },
            {
              "nodeId": "9556fe8f-65c4-4412-a0ef-f7d4132f9e2e",
              "type": "string",
              "widget": "textarea",
              "title": "Pre-Built Description",
              "description": "",
              "placeholder": "Enter description of what Pre-Built does",
              "required": true,
              "helper": "Enter description of what Pre-Built does"
            },
            {
              "nodeId": "674ebd12-d227-41fa-a234-21003346aabf",
              "type": "string",
              "title": "License",
              "description": "(OPTIONAL) Provide a license:",
              "placeholder": "*By default Apache License 2.0 will be supplied",
              "required": false,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default"
            },
            {
              "nodeId": "d213e136-92cc-4a7a-a9bb-980652f65771",
              "type": "string",
              "title": "Contributor",
              "description": "",
              "placeholder": "Enter contributor name",
              "required": true,
              "readOnly": false,
              "binding": false,
              "rel": "item",
              "targetPointer": "/default",
              "helper": "Enter contributor name"
            },
            {
              "nodeId": "d2af58ae-4759-48bb-a88c-84fd9704e374",
              "type": "string",
              "widget": "textarea",
              "title": "Readme",
              "description": "This readme will be displayed on the Admin Essentials page. You can edit this placeholder to provide a description of what your prebuilt will accomplish.",
              "placeholder": "Enter README",
              "required": true,
              "default": "# Pre-Built Name\n\n## Table of Contents\n\n- [Pre-Built Name](#pre-built-name)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n    - [Capabilities](#capabilities)\n    - [Prerequisites](#prerequisites)\n    - [How to Install](#how-to-install)\n    - [Testing](#testing)\n      - [Adapters](#adapters)\n      - [External Systems](#external-systems)\n  - [Using this Pre-Built](#using-this-pre-built)\n    - [Entry Point IAP Component](#entry-point-iap-component)\n    - [Inputs](#inputs)\n    - [Outputs](#outputs)\n  - [Additional Information](#additional-information)\n\n## Overview\n\nA high level overview of what the Pre-Built does.\n\n### Capabilities\n\nA list of capabilities of what the Pre-Built. For example:\n\n- Onboard a device to controller\n- Perform a software upgrade\n\n### Prerequisites\n\nUsers must satisfy the following prerequisites to install and run this Pre-Built:\n\n- Itential Automation Platform\n  - `2023.2.x`\n\n### How to Install\n\nTo install this Pre-Built:\n\n- Verify that you are running the documented [prerequisites](#prerequisites) in order to install the Pre-Built.\n\n- Follow the instructions on the Itential Documentation site for [importing a Pre-Built](https://docs.itential.com/docs/importing-a-prebuilt-cloud).\n\n### Testing\n\nAny information related to what testing has been done to ensure this Pre-Built runs as expected.\n\n### Adapters\n\nAny adapters that need to be installed on IAP to run the Pre-Built. Ideally would also include the adapter version here.\n\n### External Systems\n\nAny external systems needed to run the Pre-Built. Ideally would also include the external system API and/or OS version here.\n\n## Using this Pre-Built\n\nAny information for how to use this Pre-Built. For instance, if meant to be run in a childJob task of a larger use case, can state this Pre-Built can be run in a [childJob task](https://docs.itential.com/docs/childjob-task-iap-2023-2).\n\nIf the Pre-Built is intended to be run from a northbound system using an API call or to be scheduled to run or manully run whenever needed, can state this Pre-Built can be run by the corresponding [Operations Manager automation trigger](https://docs.itential.com/docs/triggers-ops-manager-iap).\n\n### Entry Point IAP Component\n\nThe name of the IAP component used to start the Pre-Built. This could be a workflow, an Operations Manager automation, a Transformation (JST), or some other IAP component.\n\n### Inputs\n\nAny information about the inputs to this Pre-Built.\n\n### Outputs\n\nAny information about the outputs to this Pre-Built.\n\n### Additional Information\n\nAny additional information related to the Pre-Built.\n"
            },
            {
              "nodeId": "bd33cf32-15c6-4a2a-a97e-677a16501fec",
              "type": "boolean",
              "title": "Zero Touch",
              "description": "",
              "default": true,
              "enum": [
                {
                  "id": "27c8a60a-5bbe-4dc0-9770-eb56be05715a",
                  "value": true
                },
                {
                  "id": "8b06e2b9-faff-4bc9-9fbe-0288762cf1cf",
                  "value": false
                }
              ]
            },
            {
              "nodeId": "9743a2b3-975c-4127-8717-0205ff3a8f5c",
              "type": "array",
              "description": "Optionally enter any keywords to associate with this prebuilt",
              "items": [
                {
                  "nodeId": "4f4a7027-1c72-42af-9465-c17d22314eb9",
                  "type": "string",
                  "title": "Keyword",
                  "description": "",
                  "placeholder": "Enter a keyword",
                  "required": false,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default"
                }
              ],
              "title": "Keywords"
            },
            {
              "nodeId": "4446588f-e508-40d1-abf9-4f3eb968d75a",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "dff89a5b-9c01-481a-ba66-d3363a0e6c74",
                  "type": "string",
                  "title": "Name",
                  "description": "",
                  "placeholder": "Select an Operation Manager Automation",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "method": "GET",
                  "base": "/operations-manager",
                  "href": "/automations?limit=999",
                  "sourcePointer": "/data",
                  "sourceKeyPointer": "/name"
                }
              ],
              "title": "Operations Manager Automations"
            },
            {
              "nodeId": "a0eb027f-c130-41a1-a4b5-358c066e3a6f",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "74f4d0d3-40d3-4538-a422-25391b4dc5d7",
                  "type": "string",
                  "title": "Name",
                  "description": "Workflow Automation Name",
                  "placeholder": "Select a Workflow",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "method": "GET",
                  "base": "/automation-studio",
                  "href": "/workflows?limit=0&include=name",
                  "sourcePointer": "",
                  "sourceKeyPointer": "",
                  "transformation": "663cd90631b5e09e96d70e01"
                }
              ],
              "title": "Automation Workflows"
            }
          ]
        },
        "uiSchema": {
          "scope": {
            "ui:placeholder": "Enter scope of Pre-Built",
            "ui:help": "Must be prepended with \"@\", for instance @pre-built"
          },
          "preBuiltName": {
            "ui:placeholder": "Enter Pre-Built name",
            "ui:help": "Enter Pre-Built name"
          },
          "preBuiltDescription": {
            "ui:placeholder": "Enter description of what Pre-Built does",
            "ui:help": "Enter description of what Pre-Built does",
            "ui:widget": "textarea"
          },
          "license": {
            "ui:placeholder": "*By default Apache License 2.0 will be supplied"
          },
          "contributor": {
            "ui:placeholder": "Enter contributor name",
            "ui:help": "Enter contributor name"
          },
          "readme": {
            "ui:placeholder": "Enter README",
            "ui:widget": "textarea"
          },
          "keywords": {
            "items": {
              "keyword": {
                "ui:placeholder": "Enter a keyword"
              }
            }
          },
          "operationsManagerAutomations": {
            "items": {
              "name": {
                "ui:placeholder": "Select an Operation Manager Automation"
              }
            }
          },
          "automationWorkflows": {
            "items": {
              "name": {
                "ui:placeholder": "Select a Workflow"
              }
            }
          }
        },
        "validationSchema": {
          "keywords": {},
          "operationsManagerAutomations": {},
          "automationWorkflows": {}
        },
        "version": "2020.1"
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "663cd90631b5e09e96d70e01",
        "name": "Filter Project Scoped Workflows - IAP",
        "description": "Filter out project scoped workflows user has access to from list of workflows found",
        "incoming": [
          {
            "$id": "items",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": [
                    "name"
                  ]
                }
              },
              "required": []
            }
          }
        ],
        "outgoing": [
          {
            "$id": "filteredWorkflows",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "items",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "filterProjectScopedWorkflows"
            ],
            "view": {
              "row": 1,
              "col": 1
            },
            "context": "#"
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getFilteredWorkflowNames"
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "filteredWorkflows",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "declaration",
                "library": "RegExp",
                "method": "new RegExp",
                "args": [
                  "\\@[0-9a-fA-F]{24}\\:\\s",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  false
                ],
                "view": {
                  "row": 3,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  true
                ],
                "view": {
                  "row": 4,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                },
                "context": "#"
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "method",
                "library": "RegExp",
                "method": "exec",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 14,
                "type": "method",
                "library": "Logical",
                "method": "nullish",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                },
                "context": "#"
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 11,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                },
                "context": "#"
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "filterProjectScopedWorkflows",
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "filterProjectScopedWorkflows",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "getFilteredWorkflowNames",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "getFilteredWorkflowNames",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-27T17:56:17.742Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.742Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61a8f96c972d5600e3de8552",
        "name": "Create Pre-Built - Get formData",
        "description": "Takes in the formData for the 'Create a new prebuilt master' workflow and returns the parsed variables.",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "scope": {
                "type": "string",
                "examples": [
                  "@acme"
                ]
              },
              "preBuiltName": {
                "type": "string",
                "examples": [
                  "Example Prebuilt"
                ]
              },
              "preBuiltDescription": {
                "type": "string",
                "default": "",
                "examples": [
                  "This prebuilt will accomplish a particular use case"
                ]
              },
              "readme": {
                "type": "string",
                "examples": [
                  "# Example README"
                ]
              },
              "zeroTouch": {
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              },
              "license": {
                "type": "string",
                "default": "Apache 2%2E0",
                "examples": [
                  "Apache 2%2E0"
                ]
              },
              "contributor": {
                "type": "string",
                "examples": [
                  "John Smith"
                ]
              },
              "keywords": {
                "type": "array",
                "default": []
              },
              "operationsManagerAutomations": {
                "type": "array",
                "default": []
              },
              "automationWorkflows": {
                "type": "array",
                "default": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "scope",
            "type": "string",
            "examples": [
              "@acme"
            ]
          },
          {
            "$id": "prebuiltName",
            "type": "string",
            "examples": [
              "Example Prebuilt"
            ]
          },
          {
            "$id": "prebuiltDescription",
            "type": "string",
            "examples": [
              "This prebuilt will accomplish a particular use case"
            ]
          },
          {
            "$id": "readme",
            "type": "string",
            "examples": [
              "# Example README"
            ]
          },
          {
            "$id": "zeroTouch",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          },
          {
            "$id": "license",
            "type": "string",
            "examples": [
              "Apache 2%2E0"
            ]
          },
          {
            "$id": "contributor",
            "type": "string",
            "examples": [
              "John Smith"
            ]
          },
          {
            "$id": "keywords",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "keyword": {
                  "type": "string",
                  "examples": [
                    "exampleKeyword"
                  ]
                }
              },
              "required": []
            }
          },
          {
            "$id": "operationsManagerOperations",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Allocate CIDR"
              ]
            }
          },
          {
            "$id": "automationWorkflows",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Allocate CIDR Master Workflow"
              ]
            }
          }
        ],
        "steps": [
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getNameValue"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "operationsManagerOperations",
              "ptr": ""
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              [],
              "getNameValue"
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 14,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getNameValue"
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "automationWorkflows",
              "ptr": ""
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/operationsManagerAutomations"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/automationWorkflows"
            },
            "to": {
              "location": "method",
              "name": 14,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/scope"
            },
            "to": {
              "location": "outgoing",
              "name": "scope",
              "ptr": ""
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/readme"
            },
            "to": {
              "location": "outgoing",
              "name": "readme",
              "ptr": ""
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/license"
            },
            "to": {
              "location": "outgoing",
              "name": "license",
              "ptr": ""
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/contributor"
            },
            "to": {
              "location": "outgoing",
              "name": "contributor",
              "ptr": ""
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/keywords"
            },
            "to": {
              "location": "outgoing",
              "name": "keywords",
              "ptr": ""
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/zeroTouch"
            },
            "to": {
              "location": "outgoing",
              "name": "zeroTouch",
              "ptr": ""
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/preBuiltName"
            },
            "to": {
              "location": "outgoing",
              "name": "prebuiltName",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/preBuiltDescription"
            },
            "to": {
              "location": "outgoing",
              "name": "prebuiltDescription",
              "ptr": ""
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": []
                },
                "default": [],
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "getNameValue",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "getNameValue",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-27T17:56:17.809Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.809Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6197e2fcda174d24c34d36dc",
        "name": "Create Pre-Built - Format Publish",
        "description": "Takes in the output of the AppArtifacts componentDiscovery task and some other data to form the input of the createPublishedArtifactFromScratch task.",
        "incoming": [
          {
            "$id": "name",
            "type": "string",
            "examples": [
              "Example Name"
            ]
          },
          {
            "$id": "scope",
            "type": "string"
          },
          {
            "$id": "description",
            "type": "string",
            "examples": [
              "A prebuilt that accomplishes xyz"
            ]
          },
          {
            "$id": "contributor",
            "type": "string",
            "examples": [
              "Employee x"
            ]
          },
          {
            "$id": "readme",
            "type": "string",
            "examples": [
              "Example readme"
            ]
          },
          {
            "$id": "license",
            "type": "string",
            "examples": [
              "Apache 2.0"
            ],
            "default": "Apache 2.0"
          },
          {
            "$id": "categories",
            "type": "array"
          },
          {
            "$id": "keywords",
            "type": "array"
          },
          {
            "$id": "discoverComponentsOutput",
            "type": "object",
            "properties": {
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                }
              }
            },
            "required": []
          },
          {
            "$id": "componentsFormSelection",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "workflows": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "artifactData",
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "Example Name"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "Example Description"
                    ]
                  },
                  "contributor": {
                    "type": "string",
                    "examples": [
                      "Example Contributor"
                    ]
                  },
                  "readme": {
                    "type": "string",
                    "examples": [
                      "# Example README"
                    ]
                  },
                  "license": {
                    "type": "string",
                    "examples": [
                      "Apache 2%2E0"
                    ]
                  },
                  "categories": {
                    "type": "array"
                  },
                  "keywords": {
                    "type": "array"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "@itential/app-automation_catalog"
                      ]
                    }
                  }
                },
                "required": []
              },
              "components": {
                "type": "object",
                "properties": {
                  "automation": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "modules",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "package_id": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "version": {
                  "type": "string"
                }
              },
              "required": []
            }
          },
          {
            "$id": "defaultPackageJson",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "description",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/description"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "contributor",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/contributor"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "readme",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/readme"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "license",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/license"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/automation"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/workflow"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/json-forms"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/template"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/mop-template"
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/mop-analytic-template"
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/golden-config"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/transformation"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoverComponentsOutput",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/dependencies"
            }
          },
          {
            "id": 39,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentsFormSelection",
              "ptr": "/components/triggers"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoverComponentsOutput",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 26,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "name": "@scope/name",
                "version": "0.0.1",
                "description": "",
                "scripts": {
                  "test": "echo \"Error: no test specified\" && exit 1",
                  "deploy": "echo not needed npm publish --access=public --registry=http://registry.npmjs.org",
                  "validateSchema": "node test/manifestTester.js manifest.json manifest-schema.json",
                  "validateSchemaLinks": "node test/manifestLinkTester.js manifest.json",
                  "generateImageLinks": "node utils/generateImageLinks.js"
                },
                "repository": {
                  "type": "local",
                  "hostname": "localhost",
                  "path": "/"
                },
                "keywords": [],
                "contributors": [],
                "author": "",
                "license": "Apache-2.0",
                "devDependencies": {
                  "r2": "^2.0.1",
                  "ajv": "6.10.0",
                  "better-ajv-errors": "^0.6.1",
                  "fs-extra": "^7.0.1"
                }
              }
            ],
            "view": {
              "row": 7,
              "col": 1
            }
          },
          {
            "id": 41,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "keywords",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 40,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 42,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "keyword"
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 45,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "category"
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 47,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "categories",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 44,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 62,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 61,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 65,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "scope",
              "ptr": ""
            },
            "to": {
              "location": "template",
              "name": 63,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 72,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "contributor",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 68,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "createModuleObject"
            ],
            "view": {
              "row": 5,
              "col": 1
            }
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 42,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 40,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 45,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 44,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 57,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 55,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 61,
            "type": "function",
            "function": "convertNameToKebabCase",
            "args": [
              ""
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 55,
            "type": "method",
            "library": "Object",
            "method": "deleteProperty",
            "args": [
              null,
              "name"
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 64,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 61,
              "ptr": "/return/kebabCaseName"
            },
            "to": {
              "location": "template",
              "name": 63,
              "ptr": "/args/1/value"
            },
            "context": "#"
          },
          {
            "id": 40,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getValueOfObjectProperty",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 44,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "getValueOfObjectProperty",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 58,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 55,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 56,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 63,
            "type": "template",
            "library": "String",
            "method": "templateLiteral",
            "template": "${scope}/${name}",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            },
            "context": "#"
          },
          {
            "id": 67,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 63,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 56,
              "ptr": "/args/2/value"
            },
            "context": "#"
          },
          {
            "id": 56,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "name",
              null
            ],
            "view": {
              "row": 7,
              "col": 3
            }
          },
          {
            "id": 69,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 56,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 68,
              "ptr": "/args/0/value"
            },
            "context": "#"
          },
          {
            "id": 68,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "author",
              null
            ],
            "view": {
              "row": 5,
              "col": 3
            },
            "context": "#"
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "modules",
              "ptr": ""
            }
          },
          {
            "id": 71,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 68,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "defaultPackageJson",
              "ptr": ""
            },
            "context": "#"
          },
          {
            "id": 48,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 40,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/keywords"
            }
          },
          {
            "id": 49,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 44,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/categories"
            }
          },
          {
            "id": 66,
            "type": "assign",
            "from": {
              "location": "template",
              "name": 63,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactData",
              "ptr": "/metadata/name"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "string",
                "examples": [
                  "@itential/app-automation_catalog"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "declaration",
                "library": "String",
                "method": "new String",
                "args": [
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "package_id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "version",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "createModuleObject",
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "createModuleObject",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "optional": true
              },
              {
                "$id": "constantValue1",
                "type": "string",
                "isConstValue": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "getValueOfObjectProperty",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "getValueOfObjectProperty",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string",
                "examples": [
                  "Test Name"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "kebabCaseName",
                "type": "string",
                "examples": [
                  "test-name"
                ]
              }
            ],
            "steps": [
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "RegExp",
                "method": "new RegExp",
                "args": [
                  "\\s",
                  "gm"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 2,
                "type": "method",
                "library": "String",
                "method": "toLowerCase",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                },
                "context": "#"
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                },
                "context": "#"
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                },
                "context": "#"
              },
              {
                "id": 1,
                "type": "method",
                "library": "String",
                "method": "replace",
                "args": [
                  null,
                  null,
                  "-"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                },
                "context": "#"
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "kebabCaseName",
                  "ptr": ""
                },
                "context": "#"
              }
            ],
            "functions": [],
            "name": "convertNameToKebabCase",
            "view": {
              "col": 2,
              "row": 4
            },
            "id": "convertNameToKebabCase",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 8
        },
        "created": "2025-01-27T17:56:17.813Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.813Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f3c38e78cd2e02bacdd59eb"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/asa-firewall-object-group-update"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0%2E0%2E11-2020%2E1%2E1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "This artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2%2E0"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab%2Ecom:itentialopensource/pre-built-automations/asa-firewall-object-group-update%2Egit"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string",
                    "examples": [
                      "2%2E6%2E3"
                    ]
                  },
                  "@itential/app-json_forms": {
                    "type": "string",
                    "examples": [
                      "1%2E14%2E1"
                    ]
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string",
                    "examples": [
                      "7%2E9%2E4"
                    ]
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  17671583
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n<!-- Update the below line with your artifact name -->\n# ASA Firewall Object Group Update \n<!-- Add a short description or tag-line -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​​\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n​\n- [Overview](#overview)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Future Enhancements](#future-enhancements)\n- [How to Install](#how-to-install)\n- [How to Run](#how-to-run)\n- [Additional Information](#additional-information)\n​\n## Overview\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between their different IAP environments -->\n<!--  (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E  -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​\nThis solution consists of the following:\n* Main Workflow (**IAP-Artifacts ASA Firewall Group Policy Update**)\n* Automation Catalog entry (**IAP Artifacts ASA Firewall Object Group Update**)\n* JSON Form (**IAP Artifacts ASA Firewall Object Group Update**)\n​\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GITLAB -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/overview.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n​\n## Features\n<!-- Bullet point highlighting the most exciting features of the artifact -->\n<!-- Ex%2E: * Automatically checks for device type -->\n<!-- Ex%2E: * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- Ex%2E: * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n  * Group Update Host Addition and Removal%2E\n  * Allow for a rollback in case functionality checks have failed%2E\n  * Zero touch mode of operation is available to select via JSON form%2E\n​\n## Requirements\n<!-- Explain any pre-req%2E Ex%2E: This artifact requires Ansible or NSO (with F5 NED) in order to run -->\nThis artifact requires Ansible, Itential Automation Gateway, and a Cisco ASA device%2E\n​\n## Supported Device Types\n  * Cisco ASA/ASAv\n​\n## Test Environment\n  * Devices Ver%2E:\n    * asa: 9%2E12\n  * IAP Ver%2E 2019%2E3%2E2\n  * Itential Automation Gateway Ver%2E: 2%2E36%2E3+2019%2E3%2E14\n  * Ansible Ver%2E: 2%2E8%2E3\n​\n## Future Enhancements\n<!-- OPTIONAL Mention If the artifact has known limited support%2E Ex%2E: This artifact only support Cisco IOS and XR devices -->\n* This workflow is designed to run only against Ansible devices; don't try to run it against Cisco-ASA devices orchastrated by Cisco NSO%2E\n* Form validation on list of hosts only supports IPv4 addresses\n​\n## How to Install\n<!-- OPTIONAL - Explain if external (to IAP) components are required%2E Ex%2E The ansible roles required for this artifact can be found in www%2Egitlab%2Ecom/itentialopensource%2E%2E%2E%2E%2E%2E   -->\n * To install this artifact in IAP, use **App-Artifact** available in Nexus repo%2E \n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/install.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n​\n\n## How to Run\n<!-- Explain what is/are the main entrypoint(s) for this artifact: automation catalog document, workflow builder, postman, etc%2E  -->\nStarting the ASA Firewall Group Policy Update is done via the Automation Catalog%2E Please provide the device, group and hosts in the provided form%2E\n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/runAutomation.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n## Additional Information\nPlease use your Itential Customer Success account if you need support when using this artifact%2E\n"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ASA Firewall Object Group Update"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5e7917201b809a70972fc6e5"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1584994080756"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/IAP Artifacts ASA Firewall Object Group Update%2Ejson"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "output",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "trigger": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "ac-agenda-job": [],
                "automation": [],
                "workflow": [],
                "json-forms": [],
                "forms": [],
                "template": [],
                "mop-template": [],
                "mop-analytic-template": [],
                "golden-config": [],
                "transformation": [],
                "trigger": []
              }
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": "/components"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_3",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output",
              "ptr": "/componentMap"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "workflow"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "IAP Artifacts ASA Firewall Object Group Update"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "function",
                "function": "userFunc_1",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "sortComponent",
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "formatComponents",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_3",
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_3",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [],
            "functions": [],
            "name": "ƒ_map_1",
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              {
                "$id": "_id",
                "type": "string",
                "examples": [
                  "_id"
                ]
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "fdsa"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {},
                "required": []
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "nameId",
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "input",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              },
              {
                "$id": "itemToPush",
                "type": "object",
                "properties": {},
                "required": []
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "type"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "steps": [
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "itemToPush",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "pushComponent",
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "userFunc_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2 (1)",
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2 (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "idType",
                "type": "string"
              },
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "_id"
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "setIdentifier",
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "setIdentifier",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Logical",
                "method": "or",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 4
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "formatComponents",
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "formatComponents",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 4
        },
        "created": "2025-02-10T18:16:38.592Z",
        "createdBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "lastUpdated": "2025-02-10T18:16:38.592Z",
        "lastUpdatedBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61aa46e4972d5600e3de8554",
        "name": "Create Pre-Built - Merge Discovered Components",
        "description": "",
        "incoming": [
          {
            "$id": "workflow",
            "type": "array"
          },
          {
            "$id": "operationsAutomation",
            "type": "array"
          }
        ],
        "outgoing": [
          {
            "$id": "discoveryData",
            "type": "object",
            "properties": {
              "workflow": {
                "type": "array"
              },
              "operationsAutomation": {
                "type": "array"
              }
            }
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "workflow",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryData",
              "ptr": "/workflow"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "operationsAutomation",
              "ptr": ""
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryData",
              "ptr": "/operationsAutomation"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2025-01-27T17:56:17.758Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.758Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "61aa625a972d5600e3de8555",
        "name": "Create Pre-Built - Determine Components",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": [
              "object",
              "null"
            ]
          },
          {
            "$id": "originalComponents",
            "type": "object"
          }
        ],
        "outgoing": [
          {
            "$id": "componentInput",
            "type": "object"
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 2,
            "type": "declaration",
            "library": "Boolean",
            "method": "new Boolean",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "declaration",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "originalComponents",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "componentInput",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2025-01-27T17:56:17.754Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.754Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "619d03ad69bd2d6d0005f64d",
        "name": "Create Pre-Puilt - Edit Components",
        "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
        "incoming": [
          {
            "$id": "componentDiscoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "trigger": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "componentEditorFormInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/trigger"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/goldenConfigTrees"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/transformations"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-01-27T17:56:17.756Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.756Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6239fdc572a2f101008f5cf1",
        "name": "Create Pre-Built - Convert Form Data to Discover Inputs",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "workflows": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "discoveryEntryPoint",
            "type": "object",
            "properties": {
              "workflow": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "transformation": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "operationsAutomation": {
                "type": [
                  "null",
                  "array"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "workflow": [],
                "transformation": [],
                "operationsAutomation": []
              }
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              ""
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "workflow",
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "transformation",
              []
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 22,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "function",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 24,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "operationsAutomation",
              null
            ],
            "view": {
              "row": 4,
              "col": 3
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 22,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 13,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryEntryPoint",
              "ptr": ""
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "componentArray",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              }
            ],
            "outgoing": [
              {
                "$id": "arrayedNames",
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "zackAll"
                  ]
                }
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentArray",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "map",
                "args": [
                  null,
                  "ƒ_map_1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "arrayedNames",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "process\\Array",
            "view": {
              "col": 2,
              "row": 7
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "view": {
              "col": 1,
              "row": 7
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 7
        },
        "created": "2025-01-27T17:56:17.760Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.760Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "64b6c7f0af50070141c7da21",
        "name": "Create Pre-Built - Create Artifact to Publish",
        "description": "Create Artifact for publish",
        "incoming": [
          {
            "$id": "AEartifactInfo",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f7c62f0b80b0a2a91782437"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/zackall"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/"
                    ]
                  }
                },
                "required": []
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  1601987312797
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "ac-agenda-job"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c622d038374d99a024d66"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5f7c62f077c8212a9141d822"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1601987312364"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/zackAll.json"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "Demo"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "goldenConfigTrees"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discovery",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {},
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {},
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "mata",
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "contributor": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "readme": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "license": {
                    "type": "string"
                  },
                  "categories": {
                    "type": "array"
                  },
                  "keywords": {
                    "type": "array"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "@itential/app-automation_catalog"
                      ]
                    }
                  }
                },
                "required": []
              },
              "components": {
                "type": "object",
                "properties": {
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c6221e607880ade9b11bb"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "packageJSON",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/artifact-template"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.5"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Template for creating new artifacts"
                ]
              },
              "scripts": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "examples": [
                      "echo \"Error: no test specified\" && exit 1"
                    ]
                  },
                  "deploy": {
                    "type": "string",
                    "examples": [
                      "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                    ]
                  },
                  "validateSchema": {
                    "type": "string",
                    "examples": [
                      "node test/manifestTester.js manifest.json manifest-schema.json"
                    ]
                  },
                  "validateSchemaLinks": {
                    "type": "string",
                    "examples": [
                      "node test/manifestLinkTester.js manifest.json"
                    ]
                  },
                  "generateImageLinks": {
                    "type": "string",
                    "examples": [
                      "node utils/generateImageLinks.js"
                    ]
                  }
                },
                "required": []
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "contributors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                }
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "devDependencies": {
                "type": "object",
                "properties": {
                  "r2": {
                    "type": "string",
                    "examples": [
                      "^2.0.1"
                    ]
                  },
                  "ajv": {
                    "type": "string",
                    "examples": [
                      "6.10.0"
                    ]
                  },
                  "better-ajv-errors": {
                    "type": "string",
                    "examples": [
                      "^0.6.1"
                    ]
                  },
                  "fs-extra": {
                    "type": "string",
                    "examples": [
                      "^7.0.1"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/repository"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/repository"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/version"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/version"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/keywords"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/keywords"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/license"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/license"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/author"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/author"
            }
          },
          {
            "id": 79,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/name"
            },
            "context": "#"
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/readme"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/readme"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/description"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/description"
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/workflow"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/json-forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/template"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-template"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-analytic-template"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/transformation"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discovery",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/dependencies"
            }
          },
          {
            "id": 76,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/automation"
            }
          },
          {
            "id": 77,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/golden-config"
            }
          },
          {
            "id": 78,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/name"
            },
            "context": "#"
          },
          {
            "id": 11,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "test": "echo \"Error: no test specified\" && exit 1",
                "deploy": "echo not needed npm publish --access=public --registry=http://registry.npmjs.org",
                "validateSchema": "node test/manifestTester.js manifest.json manifest-schema.json",
                "validateSchemaLinks": "node test/manifestLinkTester.js manifest.json",
                "generateImageLinks": "node utils/generateImageLinks.js"
              }
            ],
            "view": {
              "row": 9,
              "col": 3
            }
          },
          {
            "id": 14,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "r2": "^2.0.1",
                "ajv": "6.10.0",
                "better-ajv-errors": "^0.6.1",
                "fs-extra": "^7.0.1"
              }
            ],
            "view": {
              "row": 11,
              "col": 3
            }
          },
          {
            "id": 17,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              null
            ],
            "view": {
              "row": 10,
              "col": 3
            },
            "polymorphIndex": 0
          },
          {
            "id": 21,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [],
            "view": {
              "row": 2,
              "col": 4
            },
            "polymorphIndex": 0
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/scripts"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/devDependencies"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/contributors"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/categories"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/keywords"
            }
          },
          {
            "id": 80,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/author"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/contributor"
            },
            "context": "#"
          },
          {
            "id": 81,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/author"
            },
            "to": {
              "location": "declaration",
              "name": 17,
              "ptr": "/args/0/value"
            },
            "context": "#"
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 12
        },
        "created": "2025-01-27T17:56:17.763Z",
        "createdBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "lastUpdated": "2025-01-27T17:56:17.763Z",
        "lastUpdatedBy": {
          "_id": "66aaa93c097c527679a7943f",
          "provenance": "CloudAAA",
          "username": "david.haywood@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "catalogAutomations"
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "$id": "goldenConfigTrees"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "workflow"
                  },
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "ac-agenda-job"
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "automation"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "transformation"
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-template"
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "template"
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-analytic-template"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "json-forms"
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "golden-config"
                  }
                },
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-workflow_engine"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "golden-config"
                      ]
                    },
                    "component": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "formInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 5,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 20,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 29,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_2",
              null
            ],
            "view": {
              "row": 9,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 29,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/transformations"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 35,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 10,
              "col": 2
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/goldenConfigTrees"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "ac-agenda-job"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{         \"name\": \"\"       }"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "userFunc_1",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/isNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "keys",
                "args": [
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "method",
                "library": "Array",
                "method": "includes",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 3
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 29,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 5,
                  "col": 2
                }
              },
              {
                "id": 30,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 31,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 32,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 33,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 34,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "treeId"
                ],
                "view": {
                  "row": 5,
                  "col": 1
                }
              },
              {
                "id": 35,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 36,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 37,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "workflow"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "workflow"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "newComponentCheck_transformations (1)",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/inNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "currentDiscoveredElement",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "isNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentDiscoveredElement",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newCompunentCheck_reduce (1)",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "isNewComponent",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "newComponentCheck",
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "type": "string",
                "examples": [
                  "zackAll"
                ],
                "isConstValue": true,
                "$id": "constantValue1"
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "newCompunentCheck_reduce (1)",
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "newCompunentCheck_reduce (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "curentDiscoveredJST",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "inNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "curentDiscoveredJST",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newComponentCheck_JST_reduce (1)",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "inNewComponent",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "newComponentCheck_transformations (1)",
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_transformations (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "type": "string",
                "examples": [
                  "5f7c62b43451a606c2fb0305"
                ],
                "isConstValue": true,
                "$id": "constantValue1"
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "steps": [
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "constantValue1",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "functions": [],
            "name": "newComponentCheck_JST_reduce (1)",
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_JST_reduce (1)",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 11
        },
        "created": "2025-02-10T18:16:38.498Z",
        "createdBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "lastUpdated": "2025-02-10T18:16:38.498Z",
        "lastUpdatedBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
        "incoming": [
          {
            "$id": "componentDiscoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array"
                  },
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "trigger": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "componentEditorFormInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array"
                  },
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/trigger"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/goldenConfigTrees"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/transformations"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2025-02-10T18:16:38.580Z",
        "createdBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "lastUpdated": "2025-02-10T18:16:38.580Z",
        "lastUpdatedBy": {
          "_id": "66e1b5fa497c7ab14a5a345a",
          "provenance": "CloudAAA",
          "username": "logan.seo@itential.com"
        },
        "version": "4.3.6-2023.2.10",
        "tags": []
      }
    }
  ],
  "readme": "# Pre-Built Wizard\n\n## Overview\n\nThis contains modular workflows that operate when integrated with the app-artifacts application that can be installed within IAP. Once installed teams will be able to quickly automate common manual tasks such as creating a Pre-Built artifact.json file made up of IAP components, saving a significant amount of time and effort. This library can be used as modular components with other libraries and automations to build comprehensive end-to-end orchestrated workflows with Itential's low-code platform.\n\n\n## Workflows\n\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Overview</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/blob/release/2023.2/documentation/Pre-Built Wizard.md' target='_blank'>Pre-Built Wizard</a></td>\n      <td>Pre-Built Wizard provides the ability to create a Pre-Built that is installed into Admin Essentials in IAP made up of IAP components for a particular use case or automation.</td>\n    </tr>    <tr>\n      <td><a href='https://gitlab.com/itentialopensource/pre-built-automations/prebuilt-wizard/-/blob/release/2023.2/documentation/Pre-Built Wizard Re-Discovery.md' target='_blank'>Pre-Built Wizard Re-Discovery</a></td>\n      <td>Pre-Built Wizard Re-Discovery provides the ability to update an existing Pre-Built in Admin Essentials with any new or removed IAP components for a particular use case or automation</td>\n    </tr>\n  </tbody>\n</table>\n\n\n## External Dependencies\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>OS Version</th>\n      <th>API Version</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>App-Artifacts</td>\n      <td></td>\n      <td>^6.5.5-2023.2.0</td>\n    </tr>\n  </tbody>\n</table>\n\n## Adapters\n\nNo adapters required to run this Workflow Project."
}